High priority / ASAP:
- !!Details
    - drop Chars expandgroup: unique(nchar(x))
        - use same gdf() & "Extended debugging details" cb right-top corner
    - debugging: is_sane(), is_alnum(), etc.
    - speed-up: execute only on focus of tab (throttle execution)
        - use one handler to rule them all (since subsetting is the bitch)
        - use addHandlerChanged(ntbk, function(h, ...){print(svalue(ntbk))})
    - FIXME tooltips for tabs 
    - REQ tooltip for indiv radio choices & for gdf() row/col
        - hack gradio() to allow disable individual choices
    - FIXME dynamic height for expandgp: same as label if <7 lines; else 7 lines
    - make tabbed interface optional (allow pure dffilter())
        - ??allow dfstr() and dfdescr() too
        - radio buttons: first col, then row?

- !!Reload data.frame button
    - FIXME dynamically switch f_side0g from horizontal=T to F
    - FIXME if digest has NOT changed then on 'reload' simply display a statusbar message
    - editable=T: when making object copy, save digest, then before saving changes in workspace, 
        check if digest of object is still the same and if not inform the user that 
        the object had already been modified and ask for additional confirmation 
    - FIXME reload fails if loaded df is not in workspace: df[ subs, ]
    - adding new filter should consider merged changes 
        - bug when modifying a level and merging changes, it should automatically update the filters; 
    - auto-polling of data frame? 
    - investigate cache bug: dffilter(Xa), Xa$var[1:10,] <- NA, dffilter(Xa) without closing first instance. Or dffilter(cbind(Xa, Xb)). 


 - !!FIXME make input box red when value is outside bounds (like in Geany)
    - !!improve "Name is not a match" UI (- currently in gfilter.R, when adding a filter, if you enter a wrong variable name in the input box (say, 'asdf'), then you get name is not a match message in the console. It would be nicer UI to have a red label in the dialogue)
    - !!disable OK button ( http://stackoverflow.com/questions/24711369/how-to-disable-ok-button-in-gbasicdialog-instance-of-gwidgets2/ )
 - !!tweak preset
    - choose horizontal layout
    - FIXME make '1000' for head() user-configurable
 - !!FIXME scrolling perf issues (probably related to >128 chars in a cell)
    - long PU load after display of df (perhaps related to Date/logical)
    - jerky re-size of cols (re-adj of col width)
    - CPU load on scroll
    - come up with *big* Test data frame with NAs, NA vars, various data types, Date, labels, etc.
 - !!REQ multiple selection in gcomboboxgroup()
     - multiple selection mode (isntead of shift+select on cehckboxes); 
        or via c-menu item "select to here"
 - !!REQ gcombobox(use_completion=T): when only available item has been auto-completed, drop pop-up menu automatically
 - !!FIXME prev/next buttons: right-click or ctrl+click to go first/last
 - !!tweak preset
    - add range radio
    - 'preserve/freeze set.seed()' cb with 'some' preset filter
    - fix negative input in head(..., )


 - !!proper packaging for CRAN
    - name ideas: "interactive/exploratory data manipulation"
 - !!add hide=F, search.opts=list(), auto.update=F
 - !!check.names() or disallow data frames with duplicate names to avoid assignment issues
    - bug with cbind() & check.names=F
 - !!allow to display df[x, 1, drop=F]
    - investigate what happens on merge for such a "tmp" df
    - ??add subs=NULL option & col.subs=NULL (&disallow [] in df name)
 - FIXME gWidgets vs gWidgets2 compat
 - REQ gdf() precision of decimal points
 - !!mv some funs to a Lmisc package
 - FIXME bug with ESC to close window when WM menu is poped-up


Medium priority / soon:
 - REQ when viewing gdf(), possible to c-menu "copy" cell?
 - !!bar handle to resize height of var box
 - !!tmp re-sort of displayed subset (perhaps via a drop-menu or in gdf())
 - !!toggle button to display only unique()/duplicated2() matches (can gdf() support this?)
 - FIXME bind f4 for hide button
 - !!use new_item_handler to handle the auto-resize of pane issue (on 'add item')
###
- !!Structure
    - edit data structure: rename & sort & re-order variables/cols, change var type/factors, edit factors, batch rename cols (tolower), etc. w/o displaying data frame; Deducer-style? ; dfstruct(); mutate(), copy vars, create new vars by transforming existing var; 
    - use dnd to re-order columns in list, for display purposes & tooltip
    - sort & re-order columns (in gdf()? or separately w/o loading the full data frame?; have distinct window)
    - label(..., self=T) 
        - ulabel -- graphically update label (in style of clabel); 
        - FIXME how deal with cbind() that discards label? 
            - maybe store in special object that documents all up-to-date labelled objs in workspace; 
        - append 'last modified on date time'; 
###
 - !!throttle requests from preset (see #40)
 - REQ highlight gdf() columns (see #12)
 - !!dfdiff() functionality on Merge; check if subset objs are identical; use all.equal() and identical() on subset
 - ??optimize return() beahviour, confirmation, on-the-fly, discard/save&close button, undo/redo, display diff before confirm merge, etc.
 - ??waht happens when edit 'other' variables (Date & robustness of editor); 
    - investigate sapply() thingy & factor editor robustness (strange handling of inserting NA values, especially in 'char' vars)
 - ??some sort of weird --detach-- pop-up to have more scrolling space to choose column names, and maybe to re-arrange them for displaying purposes. 
 - ??theme dependent colors


Low priority / maybe:
 - !!export subset ("save as" different obj)
 - ??on display button, log subsetting operation in the console or Log window
    - log commands, if possible
    - print commands 
 - ??data frame selector (use data frame browser; what about matrix objs?) & label(..., self=T) in tooltip and make  label editable & describe() & class() & nchar() & clone obj & save obj as .RData/csv/etc. & 
 - ??data frame selector (use data frame browser; what about matrix objs?) & label(..., self=T) in tooltip and make  label editable & describe() & class() & nchar() & auto-load on package load & allow to set gtimer(check_digest) on data frames or maybe allow to set polling using digests on specific objects/subsets; debug var with nchar, etc.; allow to compare to variables, even when vars from two different data frames (all.equal()); allow to compare two objects (all.equal()); 
 - ??diff (papertrail; setdiff2 {prob} or {compare} using github green/red & darkgreen/darkred colouring approach; 'dataview'; split-window with side-by-side display as in diffPDF; what happens when the two df have different nr of rows/columns?; also diff two variables within data.frame?; preview pane with head(X, 20) including class/mode, etc.; )
 - ??diff (papertrail; setdiff2 {prob} using github green/red & darkgreen/darkred colouring approach; 'dataview'; split-window with side-by-side display as in diffPDF; what happens when the two df have different nr of rows/columns?; also diff two variables within data.frame?; display all.equal() results and doublecheck with identical() on subset; dfdiff(); )
 - ??replace2 (gui for replacement tables); merge; 
 - ??poor man's loop constructor/debugger/sandbox with automatic interpretation of variables and display of obtained values and working on a head() subset of original input; loop workflow; apply() funs; 
 - ??poor man's formula constructor, given a df; look into Rcmdr for an implementation; allow for * : etc. constructs, maybe by using groupings; log the reproducible, generated command; see pmg; 
 - ??melt/dcast gui for pivot tables (this is still exploratory so fits the scope of the package); use margins et al.; OR use 'tables' tabular() and provide latex/html export & reproducible code
    - Rcmdr table of statistics
 - ??include dynamic subset feature in latticist
 - ??compat with other GUIs: 
    - rstudio usage ideas: View <- dffilter
    - REQ Rcmdr option for viewer editor
 - !!make code compatible with tcltk
 - ??investigate dffilter() compatibility with data.table package & plm
 - ??possible to use Rgtk2Extras widget
 - ??what of 5gb dataset or 21297 integer levels: 
    - it shouldn't be too slow; 
    - if possible use max 1 copy/subs of df; 


###
gfilter.R TODO items:
 - ??sort variable components? or use data frame order?
     - add 'sort items' toggle button in filter
 - ??frame around 'rm' and 'disable' button/cb
 - !!inspect the gfilter code (logical vector selection, use spinners for 'range' & type-ahead updating of filters, manually update filter items to reflect available choices as a 'update filters' button or 'freeze selection' checkbox?, what happens to 'Date' or 'other' classes, use rgtk2editdf)
 - !!inspect the gfilter code (logical vector selection, use spinners for 'range', head/tail/some/!is.na/na.omit, manually update filter items to reflect available choices as a 'update filters' button or 'freeze selection' checkbox?, what happens to 'Date' or 'other' classes, use rgtk2editdf)
 - ??gfilterpreset (use c("==", "%in%", "!=", ">", ">=", "<", "<=") combo, logical / manual subset, )
 - ??stringr (for options 'whole word' in search; replacement for grepl(); )

